-- MySQL Script generated by MySQL Workbench
-- Tue Aug  8 21:19:23 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema logistics
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema logistics
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `logistics` DEFAULT CHARACTER SET utf8 ;
USE `logistics` ;

-- -----------------------------------------------------
-- Table `logistics`.`user_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`user_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(25) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `auth_key` VARCHAR(32) NULL,
  `password_hash` VARCHAR(255) NULL,
  `password_reset_token` VARCHAR(255) NULL,
  `email` VARCHAR(255) NOT NULL,
  `status` SMALLINT(6) NULL,
  `created_at` VARCHAR(10) NULL,
  `updated_at` VARCHAR(10) NULL,
  `user_type` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_user_user_type1_idx` (`user_type` ASC),
  CONSTRAINT `fk_user_user_type1`
    FOREIGN KEY (`user_type`)
    REFERENCES `logistics`.`user_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`delivery_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`delivery_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` ENUM('Pending', 'Confirmed', 'In Transit', 'Arrived') NOT NULL,
  `timestamp` VARCHAR(20) NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`contact_number`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`contact_number` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `contact_number` VARCHAR(20) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`barangay`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`barangay` (
  `id` VARCHAR(10) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `longitude` DECIMAL(20) NULL,
  `latitude` DECIMAL(20) NULL,
  `population` INT NULL,
  `timestamp` VARCHAR(20) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`city_municipal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`city_municipal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `longitude` DECIMAL(20) NULL,
  `latitude` DECIMAL(20) NULL,
  `population` INT NULL,
  `timestamp` VARCHAR(20) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`province`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`province` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `longitude` DECIMAL(20) NULL,
  `latitude` DECIMAL(20) NULL,
  `population` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`region`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`region` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `longitude` DECIMAL(20) NULL,
  `latitude` DECIMAL(20) NULL,
  `population` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`address` (
  `barangay_id` VARCHAR(10) NOT NULL,
  `city_municipal_id` INT NOT NULL,
  `province_id` INT NOT NULL,
  `region_id` INT NOT NULL,
  `street_address` VARCHAR(255) NULL,
  `street_address_2` VARCHAR(255) NULL,
  PRIMARY KEY (`barangay_id`, `city_municipal_id`, `province_id`, `region_id`),
  INDEX `fk_address_city_municipal1_idx` (`city_municipal_id` ASC),
  INDEX `fk_address_province1_idx` (`province_id` ASC),
  INDEX `fk_address_region1_idx` (`region_id` ASC),
  CONSTRAINT `fk_address_barangay1`
    FOREIGN KEY (`barangay_id`)
    REFERENCES `logistics`.`barangay` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_address_city_municipal1`
    FOREIGN KEY (`city_municipal_id`)
    REFERENCES `logistics`.`city_municipal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_address_province1`
    FOREIGN KEY (`province_id`)
    REFERENCES `logistics`.`province` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_address_region1`
    FOREIGN KEY (`region_id`)
    REFERENCES `logistics`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`personal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`personal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first` VARCHAR(90) NOT NULL,
  `middle` VARCHAR(90) NULL,
  `last` VARCHAR(90) NOT NULL,
  `birth_month` ENUM('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December') NOT NULL,
  `birth_day` INT NOT NULL,
  `birth_year` INT NOT NULL,
  `sex` VARCHAR(45) NOT NULL,
  `nationality` INT NOT NULL,
  `contact_number` INT NOT NULL,
  `address_barangay_id` VARCHAR(10) NOT NULL,
  `address_city_municipal_id` INT NOT NULL,
  `address_province_id` INT NOT NULL,
  `address_region_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_personal_contact_number1_idx` (`contact_number` ASC),
  INDEX `fk_personal_address1_idx` (`address_barangay_id` ASC, `address_city_municipal_id` ASC, `address_province_id` ASC, `address_region_id` ASC),
  CONSTRAINT `fk_personal_contact_number1`
    FOREIGN KEY (`contact_number`)
    REFERENCES `logistics`.`contact_number` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_address1`
    FOREIGN KEY (`address_barangay_id` , `address_city_municipal_id` , `address_province_id` , `address_region_id`)
    REFERENCES `logistics`.`address` (`barangay_id` , `city_municipal_id` , `province_id` , `region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`user_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`user_info` (
  `user_id` INT NOT NULL,
  `personal_id` INT NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_user_has_personal_personal1_idx` (`personal_id` ASC),
  INDEX `fk_user_has_personal_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_personal_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `logistics`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_personal_personal1`
    FOREIGN KEY (`personal_id`)
    REFERENCES `logistics`.`personal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`request` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_requested` VARCHAR(45) NULL,
  `date_needed` VARCHAR(45) NULL,
  `quantity` VARCHAR(45) NULL,
  `description` TEXT(100) NULL,
  `tracking_number` INT NULL,
  `delivery_status` INT NOT NULL,
  `user_id` INT NOT NULL,
  `address_barangay_id` VARCHAR(10) NOT NULL,
  `address_city_municipal_id` INT NOT NULL,
  `address_province_id` INT NOT NULL,
  `address_region_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_request_delivery_status1_idx` (`delivery_status` ASC),
  INDEX `fk_request_user_info1_idx` (`user_id` ASC),
  INDEX `fk_request_address1_idx` (`address_barangay_id` ASC, `address_city_municipal_id` ASC, `address_province_id` ASC, `address_region_id` ASC),
  CONSTRAINT `fk_request_delivery_status1`
    FOREIGN KEY (`delivery_status`)
    REFERENCES `logistics`.`delivery_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_user_info1`
    FOREIGN KEY (`user_id`)
    REFERENCES `logistics`.`user_info` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_address1`
    FOREIGN KEY (`address_barangay_id` , `address_city_municipal_id` , `address_province_id` , `address_region_id`)
    REFERENCES `logistics`.`address` (`barangay_id` , `city_municipal_id` , `province_id` , `region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`vehicle_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`vehicle_category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `timestamp` VARCHAR(45) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`vehicle_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`vehicle_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(25) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `vehicle_typecol_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`vehicle_size`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`vehicle_size` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `timestamp` VARCHAR(25) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`vehicle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`vehicle` (
  `plate_number` VARCHAR(10) NOT NULL,
  `model` VARCHAR(100) NULL,
  `is_lease` TINYINT NULL,
  `timestamp` VARCHAR(25) NULL,
  `vehicle_category` INT NOT NULL,
  `vehicle_type` INT NOT NULL,
  `available_day` ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') NULL,
  `available_hour_start` VARCHAR(10) NULL,
  `available_hour_end` VARCHAR(10) NULL,
  `vehicle_size_id` INT NOT NULL,
  `address_barangay_id` VARCHAR(10) NOT NULL,
  `address_city_municipal_id` INT NOT NULL,
  `address_province_id` INT NOT NULL,
  `address_region_id` INT NOT NULL,
  PRIMARY KEY (`plate_number`),
  UNIQUE INDEX `id_UNIQUE` (`plate_number` ASC),
  INDEX `fk_vehicle_vehicle_category1_idx` (`vehicle_category` ASC),
  INDEX `fk_vehicle_vehicle_type1_idx` (`vehicle_type` ASC),
  INDEX `fk_vehicle_vehicle_size1_idx` (`vehicle_size_id` ASC),
  INDEX `fk_vehicle_address1_idx` (`address_barangay_id` ASC, `address_city_municipal_id` ASC, `address_province_id` ASC, `address_region_id` ASC),
  CONSTRAINT `fk_vehicle_vehicle_category1`
    FOREIGN KEY (`vehicle_category`)
    REFERENCES `logistics`.`vehicle_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_vehicle_type1`
    FOREIGN KEY (`vehicle_type`)
    REFERENCES `logistics`.`vehicle_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_vehicle_size1`
    FOREIGN KEY (`vehicle_size_id`)
    REFERENCES `logistics`.`vehicle_size` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_address1`
    FOREIGN KEY (`address_barangay_id` , `address_city_municipal_id` , `address_province_id` , `address_region_id`)
    REFERENCES `logistics`.`address` (`barangay_id` , `city_municipal_id` , `province_id` , `region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supply_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supply_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(45) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`unit_of_measurement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`unit_of_measurement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supply`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supply` (
  `code` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `date_expiration` VARCHAR(25) NULL,
  `date_received` VARCHAR(25) NULL,
  `description` TEXT(100) NULL,
  `timestamp` VARCHAR(25) NULL,
  `supply_type` INT NOT NULL,
  `unit_of_measurement_id` INT NOT NULL,
  PRIMARY KEY (`code`),
  UNIQUE INDEX `id_UNIQUE` (`code` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_supply_supply_type1_idx` (`supply_type` ASC),
  INDEX `fk_supply_unit_of_measurement1_idx` (`unit_of_measurement_id` ASC),
  CONSTRAINT `fk_supply_supply_type1`
    FOREIGN KEY (`supply_type`)
    REFERENCES `logistics`.`supply_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supply_unit_of_measurement1`
    FOREIGN KEY (`unit_of_measurement_id`)
    REFERENCES `logistics`.`unit_of_measurement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supplier_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supplier_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `timestamp` VARCHAR(20) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`legal_structure`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`legal_structure` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `timestamp` VARCHAR(20) NULL,
  `description` TEXT(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`primary_commodity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`primary_commodity` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(20) NULL,
  `descrption` TEXT(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supplier` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `email` VARCHAR(100) NULL,
  `website` VARCHAR(255) NULL,
  `contact_person` VARCHAR(255) NULL,
  `timestamp` VARCHAR(45) NULL,
  `principal_name` VARCHAR(255) NULL,
  `principal_title` ENUM('CEO', 'President') NULL,
  `business_number_of_year` INT NULL,
  `description` TEXT(100) NULL,
  `supplier_type` INT NOT NULL,
  `legal_structure_id` INT NOT NULL,
  `primary_commodity_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_supplier_supplier_type1_idx` (`supplier_type` ASC),
  INDEX `fk_supplier_legal_structure1_idx` (`legal_structure_id` ASC),
  INDEX `fk_supplier_primary_commodity1_idx` (`primary_commodity_id` ASC),
  CONSTRAINT `fk_supplier_supplier_type1`
    FOREIGN KEY (`supplier_type`)
    REFERENCES `logistics`.`supplier_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supplier_legal_structure1`
    FOREIGN KEY (`legal_structure_id`)
    REFERENCES `logistics`.`legal_structure` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supplier_primary_commodity1`
    FOREIGN KEY (`primary_commodity_id`)
    REFERENCES `logistics`.`primary_commodity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`auth_rule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`auth_rule` (
  `name` VARCHAR(64) NOT NULL,
  `data` TEXT(255) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`auth_assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`auth_assignment` (
  `created_at` INT NULL,
  `auth_rule_name` VARCHAR(64) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`auth_rule_name`, `user_id`),
  INDEX `fk_auth_assignment_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_auth_assignment_auth_rule1`
    FOREIGN KEY (`auth_rule_name`)
    REFERENCES `logistics`.`auth_rule` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_assignment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `logistics`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`auth_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`auth_item` (
  `name` VARCHAR(64) NOT NULL,
  `type` INT NULL,
  `description` TEXT(255) NULL,
  `data` TEXT(255) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  `rule_name` VARCHAR(64) NULL,
  `auth_rule_name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`name`),
  INDEX `fk_auth_item_auth_rule1_idx` (`auth_rule_name` ASC),
  CONSTRAINT `fk_auth_item_auth_rule1`
    FOREIGN KEY (`auth_rule_name`)
    REFERENCES `logistics`.`auth_rule` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`donation_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`donation_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `supply_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_donation_type_supply_type1_idx` (`supply_type_id` ASC),
  CONSTRAINT `fk_donation_type_supply_type1`
    FOREIGN KEY (`supply_type_id`)
    REFERENCES `logistics`.`supply_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`donation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`donation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` VARCHAR(45) NULL,
  `method` VARCHAR(50) NULL,
  `donation_type_id` INT NOT NULL,
  `description` TEXT(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_donation_donation_type1_idx` (`donation_type_id` ASC),
  CONSTRAINT `fk_donation_donation_type1`
    FOREIGN KEY (`donation_type_id`)
    REFERENCES `logistics`.`donation_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`warehouse_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`warehouse_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(45) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`warehouse_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`warehouse_category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(25) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`warehouse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`warehouse` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `contact_person_name` VARCHAR(255) NULL,
  `year_established` INT NULL,
  `description` TEXT(100) NULL,
  `area` VARCHAR(45) NULL,
  `timestamp` VARCHAR(25) NULL,
  `open_hours` VARCHAR(15) NULL,
  `close_hours` VARCHAR(15) NULL,
  `open_day` VARCHAR(45) NULL,
  `warehouse_type_id` INT NOT NULL,
  `warehouse_category_id` INT NOT NULL,
  `address_barangay_id` VARCHAR(10) NOT NULL,
  `address_city_municipal_id` INT NOT NULL,
  `address_province_id` INT NOT NULL,
  `address_region_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_warehouse_warehouse_type1_idx` (`warehouse_type_id` ASC),
  INDEX `fk_warehouse_warehouse_category1_idx` (`warehouse_category_id` ASC),
  INDEX `fk_warehouse_address1_idx` (`address_barangay_id` ASC, `address_city_municipal_id` ASC, `address_province_id` ASC, `address_region_id` ASC),
  CONSTRAINT `fk_warehouse_warehouse_type1`
    FOREIGN KEY (`warehouse_type_id`)
    REFERENCES `logistics`.`warehouse_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_warehouse_warehouse_category1`
    FOREIGN KEY (`warehouse_category_id`)
    REFERENCES `logistics`.`warehouse_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_warehouse_address1`
    FOREIGN KEY (`address_barangay_id` , `address_city_municipal_id` , `address_province_id` , `address_region_id`)
    REFERENCES `logistics`.`address` (`barangay_id` , `city_municipal_id` , `province_id` , `region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`disaster_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`disaster_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `timestamp` VARCHAR(20) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`disaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`disaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `disaster_type` INT NOT NULL,
  `month` VARCHAR(45) NULL,
  `day` VARCHAR(45) NULL,
  `year` VARCHAR(45) NULL,
  `address_barangay_id` VARCHAR(10) NOT NULL,
  `address_city_municipal_id` INT NOT NULL,
  `address_province_id` INT NOT NULL,
  `address_region_id` INT NOT NULL,
  PRIMARY KEY (`id`, `disaster_type`, `address_barangay_id`, `address_city_municipal_id`, `address_province_id`, `address_region_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_disaster_disaster_type1_idx` (`disaster_type` ASC),
  INDEX `fk_disaster_address1_idx` (`address_barangay_id` ASC, `address_city_municipal_id` ASC, `address_province_id` ASC, `address_region_id` ASC),
  CONSTRAINT `fk_disaster_disaster_type1`
    FOREIGN KEY (`disaster_type`)
    REFERENCES `logistics`.`disaster_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disaster_address1`
    FOREIGN KEY (`address_barangay_id` , `address_city_municipal_id` , `address_province_id` , `address_region_id`)
    REFERENCES `logistics`.`address` (`barangay_id` , `city_municipal_id` , `province_id` , `region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supply_detail_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supply_detail_info` (
  `supplier_id` INT NOT NULL,
  `supply_code` INT NOT NULL,
  `address_barangay` VARCHAR(10) NOT NULL,
  `address_city_municipal` INT NOT NULL,
  `address_province` INT NOT NULL,
  `address_region` INT NOT NULL,
  `warehouse` INT NOT NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`supplier_id`, `supply_code`),
  INDEX `fk_supplier_has_supply_supply1_idx` (`supply_code` ASC),
  INDEX `fk_supplier_has_supply_supplier1_idx` (`supplier_id` ASC),
  INDEX `fk_supply_detail_info_address1_idx` (`address_barangay` ASC, `address_city_municipal` ASC, `address_province` ASC, `address_region` ASC),
  INDEX `fk_supply_detail_info_warehouse1_idx` (`warehouse` ASC),
  CONSTRAINT `fk_supplier_has_supply_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `logistics`.`supplier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supplier_has_supply_supply1`
    FOREIGN KEY (`supply_code`)
    REFERENCES `logistics`.`supply` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supply_detail_info_address1`
    FOREIGN KEY (`address_barangay` , `address_city_municipal` , `address_province` , `address_region`)
    REFERENCES `logistics`.`address` (`barangay_id` , `city_municipal_id` , `province_id` , `region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supply_detail_info_warehouse1`
    FOREIGN KEY (`warehouse`)
    REFERENCES `logistics`.`warehouse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`warehouse_detail_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`warehouse_detail_info` (
  `warehouse_id` INT NOT NULL,
  `contact_number` INT NOT NULL,
  PRIMARY KEY (`warehouse_id`, `contact_number`),
  INDEX `fk_warehouse_has_contact_number_contact_number1_idx` (`contact_number` ASC),
  INDEX `fk_warehouse_has_contact_number_warehouse1_idx` (`warehouse_id` ASC),
  CONSTRAINT `fk_warehouse_has_contact_number_warehouse1`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `logistics`.`warehouse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_warehouse_has_contact_number_contact_number1`
    FOREIGN KEY (`contact_number`)
    REFERENCES `logistics`.`contact_number` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`user_has_donation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`user_has_donation` (
  `user_info_user_id` INT NOT NULL,
  `donation_id` INT NOT NULL,
  `amount` VARCHAR(45) NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`user_info_user_id`, `donation_id`),
  INDEX `fk_user_info_has_donation_donation1_idx` (`donation_id` ASC),
  INDEX `fk_user_info_has_donation_user_info1_idx` (`user_info_user_id` ASC),
  CONSTRAINT `fk_user_info_has_donation_user_info1`
    FOREIGN KEY (`user_info_user_id`)
    REFERENCES `logistics`.`user_info` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_has_donation_donation1`
    FOREIGN KEY (`donation_id`)
    REFERENCES `logistics`.`donation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`requested_supply`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`requested_supply` (
  `request_id` INT NOT NULL,
  `request_user_info_user_id` INT NOT NULL,
  `supply_detail_info_supplier` INT NOT NULL,
  `supply_detail_info_supply_code` INT NOT NULL,
  `quantity` VARCHAR(45) NULL,
  `start_date_expected` VARCHAR(45) NULL,
  `start_date_actual` VARCHAR(45) NULL,
  `end_date_expected` VARCHAR(45) NULL,
  `end_date_actual` VARCHAR(45) NULL,
  `vehicle_plate_number` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`request_id`, `request_user_info_user_id`, `supply_detail_info_supplier`, `supply_detail_info_supply_code`, `vehicle_plate_number`),
  INDEX `fk_request_has_supply_detail_info_supply_detail_info1_idx` (`supply_detail_info_supplier` ASC, `supply_detail_info_supply_code` ASC),
  INDEX `fk_request_has_supply_detail_info_request1_idx` (`request_id` ASC, `request_user_info_user_id` ASC),
  INDEX `fk_requested_supply_vehicle1_idx` (`vehicle_plate_number` ASC),
  CONSTRAINT `fk_request_has_supply_detail_info_request1`
    FOREIGN KEY (`request_id` , `request_user_info_user_id`)
    REFERENCES `logistics`.`request` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_has_supply_detail_info_supply_detail_info1`
    FOREIGN KEY (`supply_detail_info_supplier` , `supply_detail_info_supply_code`)
    REFERENCES `logistics`.`supply_detail_info` (`supplier_id` , `supply_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requested_supply_vehicle1`
    FOREIGN KEY (`vehicle_plate_number`)
    REFERENCES `logistics`.`vehicle` (`plate_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supply_in_warehouse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supply_in_warehouse` (
  `supply_detail_info_supplier_id` INT NOT NULL,
  `supply_detail_info_supply_code` INT NOT NULL,
  `warehouse_detail_info_warehouse_id` INT NOT NULL,
  `warehouse_detail_info_contact_number_id` INT NOT NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`supply_detail_info_supplier_id`, `supply_detail_info_supply_code`, `warehouse_detail_info_warehouse_id`, `warehouse_detail_info_contact_number_id`),
  INDEX `fk_warehouse_has_supply_detail_info_supply_detail_info1_idx` (`supply_detail_info_supplier_id` ASC, `supply_detail_info_supply_code` ASC),
  INDEX `fk_supply_storage_info_warehouse_detail_info1_idx` (`warehouse_detail_info_warehouse_id` ASC, `warehouse_detail_info_contact_number_id` ASC),
  CONSTRAINT `fk_warehouse_has_supply_detail_info_supply_detail_info1`
    FOREIGN KEY (`supply_detail_info_supplier_id` , `supply_detail_info_supply_code`)
    REFERENCES `logistics`.`supply_detail_info` (`supplier_id` , `supply_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supply_storage_info_warehouse_detail_info1`
    FOREIGN KEY (`warehouse_detail_info_warehouse_id` , `warehouse_detail_info_contact_number_id`)
    REFERENCES `logistics`.`warehouse_detail_info` (`warehouse_id` , `contact_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`auth_item_child`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`auth_item_child` (
  `child` VARCHAR(64) NOT NULL,
  `parent` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`child`, `parent`),
  INDEX `fk_auth_item_has_auth_item_auth_item2_idx` (`parent` ASC),
  INDEX `fk_auth_item_has_auth_item_auth_item1_idx` (`child` ASC),
  CONSTRAINT `fk_auth_item_has_auth_item_auth_item1`
    FOREIGN KEY (`child`)
    REFERENCES `logistics`.`auth_item` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_item_has_auth_item_auth_item2`
    FOREIGN KEY (`parent`)
    REFERENCES `logistics`.`auth_item` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`supplier_has_contact_number`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`supplier_has_contact_number` (
  `supplier_id` INT NOT NULL,
  `contact_number_id` INT NOT NULL,
  PRIMARY KEY (`supplier_id`, `contact_number_id`),
  INDEX `fk_supplier_has_contact_number_contact_number1_idx` (`contact_number_id` ASC),
  INDEX `fk_supplier_has_contact_number_supplier1_idx` (`supplier_id` ASC),
  CONSTRAINT `fk_supplier_has_contact_number_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `logistics`.`supplier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supplier_has_contact_number_contact_number1`
    FOREIGN KEY (`contact_number_id`)
    REFERENCES `logistics`.`contact_number` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`driver`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`driver` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `personal_info` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_driver_personal1_idx` (`personal_info` ASC),
  CONSTRAINT `fk_driver_personal1`
    FOREIGN KEY (`personal_info`)
    REFERENCES `logistics`.`personal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logistics`.`driver_of_vehicle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logistics`.`driver_of_vehicle` (
  `vehicle_plate_number` VARCHAR(10) NOT NULL,
  `driver_id` INT NOT NULL,
  PRIMARY KEY (`vehicle_plate_number`, `driver_id`),
  INDEX `fk_vehicle_has_driver_driver1_idx` (`driver_id` ASC),
  INDEX `fk_vehicle_has_driver_vehicle1_idx` (`vehicle_plate_number` ASC),
  CONSTRAINT `fk_vehicle_has_driver_vehicle1`
    FOREIGN KEY (`vehicle_plate_number`)
    REFERENCES `logistics`.`vehicle` (`plate_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_has_driver_driver1`
    FOREIGN KEY (`driver_id`)
    REFERENCES `logistics`.`driver` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
